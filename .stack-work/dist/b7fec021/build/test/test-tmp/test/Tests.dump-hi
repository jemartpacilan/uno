
==================== FINAL INTERFACE ====================
2016-12-23 12:05:14.2113921 UTC

interface main@main:Main 8001
  interface hash: 1727d5c714b44b8a3a5e4d042cde2b38
  ABI hash: 39b10a0263956e825ad757a761a5c3f5
  export-list hash: 7717d3c33ff02b9b8dab9b4c66e145c0
  orphan hash: d04e39347a143dc624de02c569c65037
  flag hash: 3a52923fc428034d7511b98a07d33776
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      QuickCheck-2.8.2@QuickCheck-2.8.2-KPm3V9n9OMa9urRrdeE4gm
                      Win32-2.3.1.1@Win32-2.3.1.1
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-DlzOk98pOsTIrg6vAjszFA
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hspec-2.2.3@hspec-2.2.3-86H51uCQbPQ4Jyo3PwPwm0
                      hspec-core-2.2.3@hspec-core-2.2.3-EwGFaO4g6ysB6lRxe4k68V
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.3@quickcheck-io-0.1.3-GDca6GG5VFTAhz3SybFTvq
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      setenv-0.1.1.3@setenv-0.1.1.3-LcnHiP6T48k9K5OKepjQ1q
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      uno-0.1.1@uno-0.1.1-9oZSbbIzoKW1G8tXby6amp
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.3@quickcheck-io-0.1.3-GDca6GG5VFTAhz3SybFTvq:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.3@hspec-core-2.2.3-EwGFaO4g6ysB6lRxe4k68V:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-DlzOk98pOsTIrg6vAjszFA:System.Console.ANSI ca076ca422c52166e42be1349b9453ba
import  -/  ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-DlzOk98pOsTIrg6vAjszFA:System.Console.ANSI.Common 120534aeddf149317cb5216a438351ac
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.List d711f98b49ef5d33e5b3d404631ed073
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.3@hspec-2.2.3-86H51uCQbPQ4Jyo3PwPwm0:Test.Hspec 138f5158b03e9fc20ecab1d67ca5e4ea
import  -/  hspec-2.2.3@hspec-2.2.3-86H51uCQbPQ4Jyo3PwPwm0:Test.Hspec.Runner 34118c3c81e1cd7cf71b398e7bfdb2fd
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-EwGFaO4g6ysB6lRxe4k68V:Test.Hspec.Core.Runner e50b104bcb1b93967ceaedbe41089108
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-EwGFaO4g6ysB6lRxe4k68V:Test.Hspec.Core.Spec 5fd7b61c8cf1bc0e431988f5497ab773
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-EwGFaO4g6ysB6lRxe4k68V:Test.Hspec.Core.Spec.Monad 7beefc7130726c948e68747a9ac24de5
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-EwGFaO4g6ysB6lRxe4k68V:Test.Hspec.Options bdf5a4228436a2f95e29199228d7a3d7
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations 0e73130bc0a821a48afa4149485fdd75
import  -/  uno-0.1.1@uno-0.1.1-9oZSbbIzoKW1G8tXby6amp:Common b12506011c6a950a79af89a87031a868
import  -/  uno-0.1.1@uno-0.1.1-9oZSbbIzoKW1G8tXby6amp:Game b679210a528f617b27e2bd7c3bc1478a
import  -/  uno-0.1.1@uno-0.1.1-9oZSbbIzoKW1G8tXby6amp:Shuffler 7f6a403d6f2b1b3d45d4610b24507492
import  -/  uno-0.1.1@uno-0.1.1-9oZSbbIzoKW1G8tXby6amp:UnoI d9d7377975e6952f3ca3e235b6701796
f4df7791937403de8944c44f80e06452
  $s$fEq[] :: GHC.Classes.Eq [Common.Card]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Common.Card]
                  (GHC.Classes.$fEq[]_$c== @ Common.Card Common.$fEqCard)
                  Main.$s$fEq[]_$s$fEq[]_$c/= -}
672119e29952037973ed5c1d392eb44c
  $s$fEq[]_$s$fEq[]_$c/= ::
    [Common.Card] -> [Common.Card] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Common.Card]) (y :: [Common.Card]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c== @ Common.Card Common.$fEqCard x y)) -}
de8c0cd3f9047482110ae090752b7c0d
  $s$fShow[] :: GHC.Show.Show [Common.Card]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Common.Card]
                  Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Main.$s$fShow[]_$s$fShow[]_$cshow
                  Main.$s$fShow[]_$s$fShow[]_$cshowList -}
9380af0c565512615183410140385d13
  $s$fShow[]_$s$fShow[]_$cshow :: [Common.Card] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Common.Card]) ->
                 Common.$fShowCard_$cshowList x (GHC.Types.[] @ GHC.Types.Char)) -}
1537f9120487ddfa4d2cfc08b51cbcba
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[Common.Card]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[Common.Card]]) (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Common.Card]
                   Common.$fShowCard_$cshowList
                   eta
                   eta1) -}
c04ddfde083b16fada23aa962c830351
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [Common.Card] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [Common.Card])
                   (eta1 :: GHC.Base.String) ->
                 Common.$fShowCard_$cshowList eta eta1) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
cfc73682d8207f4e889b4ba2bbc381ab
  blackWild :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Black
                   Common.ChCol) -}
17c54c347568aa53f1f82b478ad055be
  blueOne :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Blue
                   Common.One) -}
678b35f012b4a6115b5edd14167d2b3d
  blueThree :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Blue
                   Common.Three) -}
9a7ba43bc46fff9237bf5e25aecc5a2d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
689f5b1a1601a107867186f077337460
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main671
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
29620789e57f81069211e4ad6852d213
  main10 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main527
                   Main.main11) -}
06104f37a663061654b5841e0f72250f
  main100 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main101
                   GHC.Stack.Types.EmptyCallStack) -}
5ba595f4e3e9325e724a70d7002c7304
  main101 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main103
                   Main.main39
                   Main.main103
                   Main.main102) -}
a10369628400e674bb2e31fdff0b2400
  main102 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44#) -}
f82721ef2fafa1aa31ece09a10638be6
  main103 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 300#) -}
5e54c75e9827e1858640461eaec0a7ca
  main104 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main105
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
6a388c06be78be20ff7e3d667497b48a
  main105 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main112
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main111
                        Main.main106
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
d2b97f936af6c136018cec242307a375
  main106 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>x -}
36c77d574dde39531721e3469a74176b
  main107 :: GHC.Exception.SomeException
  {- Unfolding: (Test.Hspec.Core.Example.$fExceptionResult_$ctoException
                   Main.main108) -}
ebba3da64f412dcbf4ce5ce87a936395
  main108 :: Test.Hspec.Core.Example.Result
  {- Unfolding: (Test.Hspec.Core.Example.Pending Main.main109) -}
bd2946f1f92ac497b99226b8877cb6c5
  main109 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (GHC.Base.Just @ GHC.Base.String Main.main110) -}
993548d31faaeb385fb91d5ff9ecfd53
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main483
                   Main.main12) -}
6723e71dae357531db226f58cb0c8a6e
  main110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Implement the other tests first"#) -}
179f7baa3178c7c0264c85f44c1f501c
  main111 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should remove black card"#) -}
f6a969ef3360ee2ad72a00c102769f7d
  main112 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main113) -}
636bec0af42a63c6a2486f3b46ff2405
  main113 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main114
                   GHC.Stack.Types.EmptyCallStack) -}
057f73e6ecde419cce18a7c0bbbaeb60
  main114 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main116
                   Main.main39
                   Main.main116
                   Main.main115) -}
5377a9b596c4d087da1f75a17fc18b77
  main115 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
ea6bb76d8f1b02962956d095693ca1e2
  main116 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 291#) -}
8e49da245bbe178577366b186143eca6
  main117 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main118
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
738767c8321e59f887573e135679fc75
  main118 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main125
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main124
                        Main.main119
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
101be725b8aef322e5969f51e119fb41
  main119 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case Game.playOneCard2
                        Common.UseCard
                        Main.redWild
                        (let {
                           ipv2 :: [Common.Player] = Game.deal ww3 ww1
                         } in
                         let {
                           gs :: Common.Player = Game.check ipv2 Common.noPlayer
                         } in
                         let {
                           new_p :: Common.Player
                           = case gs of wild {
                               Common.HPlayer ds ds1 -> Common.HPlayer ds Main.main69
                               Common.AiPlayer ds ds1 -> Common.AiPlayer ds Main.main69
                               Common.NoPlayer ipv3 -> Game.drawAndEnd3 }
                         } in
                         Common.State
                           (GHC.Base.map
                              @ Common.Player
                              @ Common.Player
                              (\ (p' :: Common.Player) ->
                               case Common.$fEqPlayer_$c== p' gs of wild1 {
                                 GHC.Types.False -> p' GHC.Types.True -> new_p })
                              ipv2)
                           ww2
                           ipv1
                           (Game.discard ww4 ww3)
                           (case Common.$fEqPlayer_$c== gs gs of wild1 {
                              GHC.Types.False -> gs GHC.Types.True -> new_p }))
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) action gs' ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Card
                   Main.main120
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowCard
                   Common.$fEqCard
                   (case gs' of wild1 { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    Main.main_go1 ds5 (GHC.List.lastError @ Common.Card) })
                   Main.redWild
                   ipv2 } } } }) -}
d099a9fc46db73ea8931dccaaf5f3e28
  main12 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main427
                   Main.main13) -}
41f879d0ade7c3cb1102d1821301e274
  main120 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main121
                   GHC.Stack.Types.EmptyCallStack) -}
4678e3552c7377c3bdbd61f772c34e5c
  main121 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main123
                   Main.main28
                   Main.main123
                   Main.main122) -}
fdc44c4e8cd362bb48baf979c5a5e475
  main122 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46#) -}
889a0b86131282a820ed2484905b8be6
  main123 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 290#) -}
54976f34339fa7c7ef9f7f25369331b3
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should discard color change card"#) -}
606724c2e01472fb306e655dd076f8ea
  main125 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main126) -}
9ae9bc5e1d2d5806f1c7e451f52255fa
  main126 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main127
                   GHC.Stack.Types.EmptyCallStack) -}
7aa33f2d5f3a03b376a3153f07616c00
  main127 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main129
                   Main.main39
                   Main.main129
                   Main.main128) -}
74b24cc3b388b691f88c71c12fdf2599
  main128 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
111d97575ea1a00c0a099e2076d9c756
  main129 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 283#) -}
8c40b5a5824db5e83233f4cdfbc83134
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main363
                   Main.main14) -}
b3dbbb83af64c8c1f3ebf06a4a2a6840
  main130 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main131
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
0f903a387f0e4952f466f7d8df50019c
  main131 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main138
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main137
                        Main.main132
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
62177a579ce2c0f2c3c9d45bba2629f8
  main132 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case Game.playOneCard2
                        Common.UseCard
                        Main.redWild
                        (let {
                           ipv2 :: [Common.Player] = Game.deal ww3 ww1
                         } in
                         let {
                           gs :: Common.Player = Game.check ipv2 Common.noPlayer
                         } in
                         let {
                           new_p :: Common.Player
                           = case gs of wild {
                               Common.HPlayer ds ds1 -> Common.HPlayer ds Main.main69
                               Common.AiPlayer ds ds1 -> Common.AiPlayer ds Main.main69
                               Common.NoPlayer ipv3 -> Game.drawAndEnd3 }
                         } in
                         Common.State
                           (GHC.Base.map
                              @ Common.Player
                              @ Common.Player
                              (\ (p' :: Common.Player) ->
                               case Common.$fEqPlayer_$c== p' gs of wild1 {
                                 GHC.Types.False -> p' GHC.Types.True -> new_p })
                              ipv2)
                           ww2
                           ipv1
                           (Game.discard ww4 ww3)
                           (case Common.$fEqPlayer_$c== gs gs of wild1 {
                              GHC.Types.False -> gs GHC.Types.True -> new_p }))
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) action gs' ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Action
                   Main.main133
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowAction
                   Common.$fEqAction
                   action
                   Common.EndTurn
                   ipv2 } } } }) -}
1f57db1a18478cd23b50367d3eb4b530
  main133 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main134
                   GHC.Stack.Types.EmptyCallStack) -}
ac37d610d3bfc3f84484c90cd6718277
  main134 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main136
                   Main.main28
                   Main.main136
                   Main.main135) -}
f8d305963837822aa500757575a7a581
  main135 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
9c23913d2640023342ae4dd207a5c22d
  main136 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 282#) -}
010d96959788cd01c1cc320655530580
  main137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should play wildcard"#) -}
6e7f8e92f97706ee30b7b367efde875a
  main138 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main139) -}
c23e6d77565853f217ae70d1d388d64d
  main139 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main140
                   GHC.Stack.Types.EmptyCallStack) -}
b6aab6e40a538d156a6f6081c59f33a0
  main14 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main325
                   Main.main15) -}
4d3f78d8f5e460b9271e663e6f44dc9d
  main140 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main141
                   Main.main39
                   Main.main141
                   Main.main38) -}
f6b708c247a8bdb25ceb266f8edcc97f
  main141 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 275#) -}
f8a35864d273b659cb088eaf6229e7f7
  main142 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main143
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
bec418a25d37e36388dd763a3a074c0d
  main143 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main152
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main151
                        Main.main144
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
756ac7105de96013e59c15531e821925
  main144 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case Game.playOneCard2
                        Common.UseCard
                        Main.redReverse
                        (let {
                           ipv2 :: [Common.Player] = Game.deal ww3 ww1
                         } in
                         let {
                           gs :: Common.Player = Game.check ipv2 Common.noPlayer
                         } in
                         let {
                           new_p :: Common.Player
                           = case gs of wild {
                               Common.HPlayer ds ds1 -> Common.HPlayer ds Main.main150
                               Common.AiPlayer ds ds1 -> Common.AiPlayer ds Main.main150
                               Common.NoPlayer ipv3 -> Game.drawAndEnd3 }
                         } in
                         Common.State
                           (GHC.Base.map
                              @ Common.Player
                              @ Common.Player
                              (\ (p' :: Common.Player) ->
                               case Common.$fEqPlayer_$c== p' gs of wild1 {
                                 GHC.Types.False -> p' GHC.Types.True -> new_p })
                              ipv2)
                           ww2
                           ipv1
                           (case ww3 of wild {
                              [] -> GHC.Base.++ @ Common.Card ww4 Main.main149
                              : ipv3 ipv4
                              -> let {
                                   z :: [Common.Card] = GHC.List.$wunsafeTake @ Common.Card 1# wild
                                 } in
                                 letrec {
                                   go :: [Common.Card] -> [Common.Card]
                                     {- Arity: 1, Strictness: <S,1*U> -}
                                   = \ (ds :: [Common.Card]) ->
                                     case ds of wild1 {
                                       [] -> z : y ys -> GHC.Types.: @ Common.Card y (go ys) }
                                 } in
                                 GHC.Base.++ @ Common.Card (go ww4) Main.main149 })
                           (case Common.$fEqPlayer_$c== gs gs of wild1 {
                              GHC.Types.False -> gs GHC.Types.True -> new_p }))
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) action gs' ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Action
                   Main.main145
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowAction
                   Common.$fEqAction
                   action
                   Common.AttackReverse
                   ipv2 } } } }) -}
0161c2b8911f4325fe6ecc073bbdebc4
  main145 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main146
                   GHC.Stack.Types.EmptyCallStack) -}
e4fcb7e6af44826a0a59ea2c1f90245f
  main146 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main148
                   Main.main28
                   Main.main148
                   Main.main147) -}
5797a6c61a107bcca779f53097acddcc
  main147 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
381a8c02729a455dd9b62ae6fb341009
  main148 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 274#) -}
4a931c05f0c6083b5d33b681d764d63d
  main149 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.redOne
                   (GHC.Types.[] @ Common.Card)) -}
59b7dc0f1a356781b01b3449507385e7
  main15 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main276
                   Main.main16) -}
5546689123a1757f34e46ab3835cbc02
  main150 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.redReverse
                   (GHC.Types.[] @ Common.Card)) -}
59df5632342e192b06e93032a3075968
  main151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should attack reverse using reverse card"#) -}
47ec96c59e5d6e4241336d9e7b62a219
  main152 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main153) -}
a471188fe2ca9f28c9b4b8ae08805360
  main153 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main154
                   GHC.Stack.Types.EmptyCallStack) -}
34278d891f10b6394d4b7d97838709dd
  main154 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main155
                   Main.main39
                   Main.main155
                   Main.main72) -}
52175f0551cb06c4d6a99622b78e9749
  main155 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 266#) -}
f19c81a3b3346299e19d6e92e42fc33f
  main156 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main158
                   Main.main157) -}
6153aa35bead31683d7abfc849c6068a
  main157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "layCard"#) -}
688b8686ab5a124d241bf9ce6bf4043c
  main158 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'p'#) -}
3b50b959de0272ea6253a81f83286950
  main159 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main224
                   Main.main160) -}
b8557316062bfcae1ff7629ad04ea9ec
  main16 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main256
                   Main.main17) -}
ef7779885dd7b166f987ecf867ab63b1
  main160 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main211
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main161) -}
669aa910a3bb27ada0976a4da50cebca
  main161 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main194
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main162) -}
d1a29fd20e4e976b9a323b48f3e6274b
  main162 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main181
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main163
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
8a1a23971c7722e833f2225c960b1fb1
  main163 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main164
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
22d36ba8de1349fb23babcd7a64c16e7
  main164 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main177
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main176
                        Main.main165
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
3c46de140d4b25624e3a5fe5c9e71c27
  main165 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Action
                   Main.main172
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowAction
                   Common.$fEqAction
                   Main.main166
                   Common.TakeFromDeck
                   ipv } }) -}
c06b9904d0ed801548cbb7c11d2e5f58
  main166 :: Common.Action
  {- Unfolding: (case Game.$wuseSimpleStrategy
                        Main.main171
                        Main.main167 of ww { (#,#) ww1 ww2 ->
                 ww1 }) -}
23529cf15763115c2fb014885e44ab8f
  main167 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main168) -}
0963062aa5a8609679a0cc48c0a22e95
  main168 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.yellowTwo
                   Main.main169) -}
e22fae74ba79eee25b6ba85d3956a00d
  main169 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.redThree
                   Main.main170) -}
971540c42fc4cf39f7672dc92229728c
  main17 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main227
                   Main.main18) -}
ee6e0863561836143de40d4ab6e2e8d2
  main170 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.: @ Common.Card Main.blueOne Main.main149) -}
3ccedda02055993bd8b3a3adf5b71b23
  main171 :: Common.Card
  {- HasNoCafRefs,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Green
                   Common.Six) -}
211264eb0a0741d4fb61dc716a0cc126
  main172 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main173
                   GHC.Stack.Types.EmptyCallStack) -}
e4e2199d03a99f02dd4b2bbc02934d67
  main173 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main175
                   Main.main28
                   Main.main175
                   Main.main174) -}
51c697f714031fc06430b532a9f23961
  main174 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
6d619e92c275fd910db07c8675cfe885
  main175 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 263#) -}
36293add478c4a40c52d17fd8bbb23d7
  main176 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should choose take from deck"#) -}
0eb00168619edc28e5ae343f69e415ec
  main177 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main178) -}
67d6e929db591aeb0c9be614f98575df
  main178 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main179
                   GHC.Stack.Types.EmptyCallStack) -}
555997fcad14a5a7e07b758889be45c1
  main179 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main180
                   Main.main39
                   Main.main180
                   Main.main147) -}
67b8a9d61754ecdad939d4eaab24c0d3
  main18 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main159
                   Main.main19) -}
5feb7f2c10a75628f43b63e66799b0f0
  main180 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 257#) -}
933f2ece17d00048882f13e60ca1c3ff
  main181 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main182
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
1cfdb44294e9a5e2624c669cd2fb296b
  main182 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main189
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main188
                        Main.main183
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
769fb9b864a148627df5bc2af189f904
  main183 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>x -}
91b1aa36c6efe43fa082bb5a8be824dd
  main184 :: GHC.Exception.SomeException
  {- Unfolding: (Test.Hspec.Core.Example.$fExceptionResult_$ctoException
                   Main.main185) -}
59a9f0daedf7827f97b793ab5447336a
  main185 :: Test.Hspec.Core.Example.Result
  {- Unfolding: (Test.Hspec.Core.Example.Pending Main.main186) -}
8c609ef3805b43f91ead75b180746ba5
  main186 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (GHC.Base.Just @ GHC.Base.String Main.main187) -}
026e8df3309c3dd92cc7acd2cea8c27a
  main187 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Implement useSimpleStrategy function"#) -}
f2ec500bb00f88eca1948f1f9c0ef8b5
  main188 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should return a red color change wildcard"#) -}
5f10b7ab871bdda8fe3d2e73f8678406
  main189 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main190) -}
fcd81a1a568a30caf095b34c12a6af57
  main19 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main45
                   Main.main20) -}
299e82c6ef24bac65f1821eda6f86d10
  main190 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main191
                   GHC.Stack.Types.EmptyCallStack) -}
fb8de23539cb64f8dac4eb0291dc9dde
  main191 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main193
                   Main.main39
                   Main.main193
                   Main.main192) -}
cd7a78bb0ff1bdc35174f57aa0256acf
  main192 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51#) -}
d071754ed1c77a32cc1a2042ed11aea5
  main193 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 250#) -}
8e5f29ebd48a83c85688f77f7d3510bd
  main194 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main195
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
7f68896ec46517977c4b245812a18f33
  main195 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main206
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main205
                        Main.main196
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
94d859eca8863b878a589eb842f635f0
  main196 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Card
                   Main.main202
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowCard
                   Common.$fEqCard
                   Main.main197
                   Main.blueOne
                   ipv } }) -}
2f6631bec563e807901206e1a781cbca
  main197 :: Common.Card
  {- Unfolding: (case Game.$wuseSimpleStrategy
                        Main.main201
                        Main.testHand of ww { (#,#) ww1 ww2 ->
                 ww2 }) -}
ef9aab0967dac33b9888e0e932e3be75
  main198 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.yellowTwo
                   Main.main199) -}
9ff17d8defd309e09edcefbcb9a7fc76
  main199 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.redThree
                   Main.main200) -}
012901b2f3c7b9e83672ee47aaac063f
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Main.main3 #)) -}
6fbe59130e3c03c0ea049080e81733f9
  main20 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main21
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
b7cb204be435a9fcc0756931a32de57d
  main200 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ Common.Card Main.blueOne Main.main69) -}
d678ce605e9bbc7e968a2c9dfbcf5a84
  main201 :: Common.Card
  {- HasNoCafRefs,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Green
                   Common.One) -}
965164f1f7da95e07630fad86f3d6484
  main202 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main203
                   GHC.Stack.Types.EmptyCallStack) -}
ba34db172c2bae4e9bc8a959c61bd4f3
  main203 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main204
                   Main.main28
                   Main.main204
                   Main.main38) -}
77388fa4c03bbe9ce36d80350807abfe
  main204 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 249#) -}
0d2028b51ee8ab45c1c0e605d78a56ce
  main205 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should return matching number"#) -}
20e5300dd9c919ac297cad14cfd64b09
  main206 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main207) -}
ce12afa7503cf632e68d40ce3874af53
  main207 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main208
                   GHC.Stack.Types.EmptyCallStack) -}
ba7b772178fa4355f6cb0a591483cda4
  main208 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main210
                   Main.main39
                   Main.main210
                   Main.main209) -}
93838b38b4879ce2a54b87e6f978046f
  main209 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39#) -}
94220f4f832da6dd79aba94a2a34cb92
  main21 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main42
                   Main.main22
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
a129b0e10be6d7c96c1f985911cd2e24
  main210 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 243#) -}
1c65e0a207dbbd872e1f20c27fa763bf
  main211 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main212
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
b7d36738053dac6b1f33b5ee08f16421
  main212 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main220
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main219
                        Main.main213
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
993a07e3f2cb2b3d7fe9105452d5eb9f
  main213 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Card
                   Main.main215
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowCard
                   Common.$fEqCard
                   Main.main214
                   Main.redThree
                   ipv } }) -}
4c591b41c2e1cd98982952d2e9750f28
  main214 :: Common.Card
  {- Unfolding: (case Game.$wuseSimpleStrategy
                        Main.redOne
                        Main.testHand of ww { (#,#) ww1 ww2 ->
                 ww2 }) -}
d8c83471395e84650f80b8e58ce723a0
  main215 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main216
                   GHC.Stack.Types.EmptyCallStack) -}
8e188525b146fbb8b172e651385e1de6
  main216 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main218
                   Main.main28
                   Main.main218
                   Main.main217) -}
746c9825e7f7b53f434e0864b1161892
  main217 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 31#) -}
0f53ed220bba89617f3c6a2eccf6a31a
  main218 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 242#) -}
4469450a64c4d2d31ca7c48db1024601
  main219 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should return matching color"#) -}
62b49aca960cab145025e958cfbd3a11
  main22 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main23
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
0aa939dda8057561c8aa582c27b49f17
  main220 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main221) -}
e6a9865d5b86d04cebb4f104150be32c
  main221 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main222
                   GHC.Stack.Types.EmptyCallStack) -}
f19d6447ca90957feaa19654cd2f03a6
  main222 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main223
                   Main.main39
                   Main.main223
                   Main.main147) -}
9f583182fe064d09ec58d081325e8b66
  main223 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 236#) -}
a4e2432078fa839bb083d48fd56a295b
  main224 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main226
                   Main.main225) -}
3d447bcf52ba6d41394da34b30f668e5
  main225 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "seSimpleStrategy"#) -}
aa107dfa22b8fd7ce21544d72268b8fd
  main226 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'u'#) -}
057880681b4309830b6159e86a644d73
  main227 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main253
                   Main.main228) -}
1ae1c76de71d07481fdd78a261d2f31e
  main228 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main242
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main229
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
ad376d67949ee88399250d216d85bba6
  main229 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main230
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
7813cb1070a5b9f3a8429b0d1dc8ccf2
  main23 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main35
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main34
                        Main.main24
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
50f9ed3e343895b3d91f6149cf7deb67
  main230 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main237
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main236
                        Main.main231
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
5b8dfe60c13d70e8618be58a5332e1ff
  main231 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 let {
                   gs' :: Common.Player = Game.check ipv2 Common.noPlayer
                 } in
                 case Game.drawAndEnd2
                        Game.takeFromDeck2
                        (Common.State ipv2 ww2 ipv1 (Game.discard ww4 ww3) gs')
                        gs'
                        ipv of ds1 { (#,#) ipv3 ipv4 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main232
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case ipv4 of wild { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    case GHC.List.$wlenAcc @ Common.Card ds4 0# of ww7 { DEFAULT ->
                    GHC.Types.I# ww7 } })
                   (case GHC.List.$wlenAcc @ Common.Card ipv1 0# of ww7 { DEFAULT ->
                    GHC.Types.I# (GHC.Prim.-# ww7 1#) })
                   ipv3 } } }) -}
11b2907ed4952c8ebe88878451a092db
  main232 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main233
                   GHC.Stack.Types.EmptyCallStack) -}
4115584fd83979518446fd304368694f
  main233 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main235
                   Main.main28
                   Main.main235
                   Main.main234) -}
e65ad8105c03b2aa21a86390ae92fb03
  main234 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 52#) -}
db0f18630716fd755c26bc1927240a71
  main235 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 233#) -}
42dd89bf2497b64ac50bc61f152ee890
  main236 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should take only 1 card from deck"#) -}
29a4841b25a007554c033d5cfb2f3c5c
  main237 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main238) -}
221486c08a9f3b1ccc584265ba0dbafc
  main238 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main239
                   GHC.Stack.Types.EmptyCallStack) -}
904f4068ab8dc1f416743753848e51d8
  main239 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main241
                   Main.main39
                   Main.main241
                   Main.main240) -}
09d6752fcc1dd362985062baa97c72e4
  main24 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 case Game.$wplayLoop
                        ipv2
                        ww2
                        ipv1
                        (Game.discard ww4 ww3)
                        (Game.check ipv2 Common.noPlayer)
                        Common.NoAttack
                        ipv of ds1 { (#,#) ipv3 ipv4 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Bool
                   Main.main25
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowBool
                   GHC.Classes.$fEqBool
                   (Game.playerHasWon ipv4)
                   GHC.Types.True
                   ipv3 } } }) -}
8ebd3f9edab4432c1726ab249dc053f7
  main240 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43#) -}
755962f8ea89cc24aad84126016a4d7a
  main241 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 226#) -}
293469b54555b61f25d2c774e305f6d4
  main242 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main243
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
a4e96a6d3fa8a41991d7299a528c4e7f
  main243 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main249
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main248
                        Main.main244
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
366cbb11b9a86e693912e441d0651afc
  main244 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 let {
                   gs' :: Common.Player = Game.check ipv2 Common.noPlayer
                 } in
                 case Game.drawAndEnd2
                        Game.takeFromDeck2
                        (Common.State ipv2 ww2 ipv1 (Game.discard ww4 ww3) gs')
                        gs'
                        ipv of ds1 { (#,#) ipv3 ipv4 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Card
                   Main.main245
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowCard
                   Common.$fEqCard
                   (GHC.List.$w!! @ Common.Card ipv1 0#)
                   (case ipv4 of wild { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    case ds6 of wild1 {
                      Common.HPlayer ds8 ds9
                      -> Main.main_go3 ds9 (GHC.List.lastError @ Common.Card)
                      Common.AiPlayer ds8 ds9
                      -> Main.main_go2 ds9 (GHC.List.lastError @ Common.Card)
                      Common.NoPlayer ipv5
                      -> case Common.hand1 ret_ty Common.Card of {} } })
                   ipv3 } } }) -}
3f1f6ca7784aef810088960435a9c717
  main245 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main246
                   GHC.Stack.Types.EmptyCallStack) -}
f7500bd845f99d7c73870b2291b7afe3
  main246 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main247
                   Main.main28
                   Main.main247
                   Main.main27) -}
2c288c13f5b428b79c366d76cf59ac93
  main247 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 225#) -}
a5d56b6c9023245722b88da1fc57f09b
  main248 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should take 1 card and put in hand"#) -}
2fcad1944c5630bec7159e2168a4bde6
  main249 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main250) -}
493679cbb80a1d725eb076b74301e80a
  main25 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main26
                   GHC.Stack.Types.EmptyCallStack) -}
e65b9005705898644f3672b1c866875f
  main250 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main251
                   GHC.Stack.Types.EmptyCallStack) -}
614d8c71eb22450e0e5708a380c0139e
  main251 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main252
                   Main.main39
                   Main.main252
                   Main.main102) -}
557e95159dddc4efe4b31589c95013ec
  main252 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 218#) -}
01f7bc7713d8d6977174a9c3114f856e
  main253 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main255
                   Main.main254) -}
f61a80c7960ea357415eea59e9e20315
  main254 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "akeFromDeck"#) -}
73b9e2f19dac3bb80eb5c0aacb550034
  main255 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 't'#) -}
5b17b9696e6ea86930e976f7213d9129
  main256 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main274
                   Main.main257) -}
fce0b189c2d9f4a84fc96f76aa6e51e7
  main257 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main266
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main258
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
5e242c1e371b04da88acd78154e769df
  main258 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main259
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
94cc27180a68386522688f7a4cedada3
  main259 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main262
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main261
                        Main.main260
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
ef413757f8d5a03b9b6482d6f72ae705
  main26 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main29
                   Main.main27) -}
b432c12e229d77ffe6bcea818d9b7759
  main260 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1 -}
7ca5f57b9a41b9866f9b32a3a9fde3f1
  main261 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should move to discard hand"#) -}
240f0704545ee155287452030a6e9c76
  main262 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main263) -}
75b6f8e0c5e200445305781386672a6c
  main263 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main264
                   GHC.Stack.Types.EmptyCallStack) -}
0e443d9a973a7b8a46db7bf49339ea35
  main264 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main265
                   Main.main39
                   Main.main265
                   Main.main174) -}
dff75c7e9a62c4bf2ad9663ef51e9527
  main265 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 207#) -}
7f7e1ec843ecc5c53695d98a030ad9e5
  main266 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main267
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
ab663774b9aae6405ff0420bc959bc7f
  main267 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main270
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main269
                        Main.main268
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
785e3f95618e1d2f7bebfe9e13fb16ef
  main268 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1 -}
31ba244bba0e792095c4f6308419f331
  main269 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should remove from current hand"#) -}
d94864870eb3bfcb7168e70402e1c848
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41#) -}
fd4286207661dc5915c2a9354b8b2821
  main270 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main271) -}
22cd198b6c62470701c12cc41f989539
  main271 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main272
                   GHC.Stack.Types.EmptyCallStack) -}
60c8165e3ca26efb724d290a9ed19973
  main272 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main273
                   Main.main39
                   Main.main273
                   Main.main27) -}
05d0c5f33dc140e4ed5f73032e92c26b
  main273 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 198#) -}
df96861f9f2cb7623fdcefb2a42c1fdf
  main274 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main255
                   Main.main275) -}
69410fe6376bb7e02bb54ccaf2edb104
  main275 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "akeFromHand"#) -}
04668ab95f5c8262ad01e4011b857aa1
  main276 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main322
                   Main.main277) -}
09018bf84b24ebde81d3ef553e4db402
  main277 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main308
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main278) -}
7a83ee4bec581fd2bbfc19c06b322223
  main278 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main296
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main279
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
bcdb4407ef3b895727b2b91308147414
  main279 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main280
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
4a37ecf983cc85a5fd03b76350e11c3c
  main28 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
66f4a476d1db3038f5cdb8e1165dff99
  main280 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main291
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main290
                        Main.main281
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
4d8a53f14045afb76b777633642d98c6
  main281 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.main_gs of ww { Common.State ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case Game.reloadDeck1
                        (Common.State ww1 ww2 ww3 Main.testDStack ww5)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main286
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case ipv3 of wild { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    case GHC.List.$wlenAcc @ Common.Card ds4 0# of ww7 { DEFAULT ->
                    GHC.Types.I# ww7 } })
                   Main.main282
                   ipv2 } } }) -}
be8672db3d81d8f68aa9fbab889e1cd1
  main282 :: GHC.Types.Int
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ Common.Card
                        Main.testDStack
                        0# of ww2 { DEFAULT ->
                 GHC.Types.I# (GHC.Prim.-# ww2 1#) }) -}
d779e82326d40310de13686720cd083e
  main283 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ Common.Card Main.redOne Main.main284) -}
3b727ea06bfc7123bcb3d15a37859f72
  main284 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.yellowTwo
                   Main.main285) -}
da7c77ad49df709300bfa06dea4a6968
  main285 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main69) -}
8e771677b4d5ca4a2d2d9ac108d576bb
  main286 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main287
                   GHC.Stack.Types.EmptyCallStack) -}
7a100bd0aa0f3485a8d28276cdc7144a
  main287 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main289
                   Main.main28
                   Main.main289
                   Main.main288) -}
d4a575b4bdc630c449d21109348a6e75
  main288 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 61#) -}
068397a66e0374f5fcff499c0d4af3b1
  main289 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 195#) -}
d56dc5201abddb7fbcf2599e10c9e1b6
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 339#) -}
5074f55a57cb6ecc4df215adf3ffba78
  main290 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should move cards from discard to deck on reload"#) -}
c1da7dadc2450c2f519463764388552e
  main291 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main292) -}
646e108f5518ded8973ba788e6e716aa
  main292 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main293
                   GHC.Stack.Types.EmptyCallStack) -}
33718977945fd6bcf12a3ae894a5fdfa
  main293 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main295
                   Main.main39
                   Main.main295
                   Main.main294) -}
8f9f49a680a0114fd946c3519b331f07
  main294 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58#) -}
40635b29e2d1ee22141be52e08f10c78
  main295 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 188#) -}
5bf25890b2f2f632044af2d86fa9bb88
  main296 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main297
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
70886c9ed046f4f56b8bf77ba87a4d84
  main297 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main304
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main303
                        Main.main298
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
db23d1b49427d289733f6efc1cac3b56
  main298 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.main_gs of ww { Common.State ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case Game.reloadDeck1
                        (Common.State ww1 ww2 ww3 Main.testDStack ww5)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main300
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case ipv3 of wild { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    case GHC.List.$wlenAcc @ Common.Card ds5 0# of ww7 { DEFAULT ->
                    GHC.Types.I# ww7 } })
                   Main.main299
                   ipv2 } } }) -}
81a9622baab2d9f57645bb02fd072e6e
  main299 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
7846583a2bc3bcde43ed2bcfde99dd1d
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
73bd0790cfe8a8e6c88eed9a8d80afb2
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Tests.hs"#) -}
5f4dd60ccdca2d30a30d51bd8a903879
  main300 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main301
                   GHC.Stack.Types.EmptyCallStack) -}
dda74462368835af35404b9acd208ced
  main301 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main302
                   Main.main28
                   Main.main302
                   Main.main128) -}
0516bbe8ca345d96751c3526ff40aa41
  main302 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 187#) -}
d775a0164a725df0c75988ee6d4c1abf
  main303 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should keep only 1 card after reload"#) -}
8bfdf15555556b3a0367704f37a102eb
  main304 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main305) -}
6d6726f839cf6983aa802dd025347eb0
  main305 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main306
                   GHC.Stack.Types.EmptyCallStack) -}
3c8e2f82c80bd583776720daef24f2eb
  main306 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main307
                   Main.main39
                   Main.main307
                   Main.main122) -}
dfd2a21565210c9f89db533a1e0c70f6
  main307 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 180#) -}
f6b4d94bc3fe888c73fac5297393d0ac
  main308 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main309
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
45afdf0664455e6c1dcbd119f1385583
  main309 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main317
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main316
                        Main.main310
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
481c7ed42baf1b46889d1fd8a35f37cf
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
5c626472b1565b86264a64de8d485283
  main310 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.main_gs of ww { Common.State ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 case Game.reloadDeck1
                        (Common.State ww1 ww2 ww3 Main.testDStack ww5)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Card
                   Main.main312
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowCard
                   Common.$fEqCard
                   (case ipv3 of wild { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    Main.main_go5 ds5 (GHC.List.lastError @ Common.Card) })
                   Main.main311
                   ipv2 } } }) -}
42d3b8de2886f652cd3579ec2e3a5ecb
  main311 :: Common.Card
  {- Unfolding: (Main.main_go4
                   Main.testDStack
                   (GHC.List.lastError @ Common.Card)) -}
4dec25d7effcd6af14b9be0b1d4fdb09
  main312 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main313
                   GHC.Stack.Types.EmptyCallStack) -}
e23206794cc78deabb0da45f3cc723af
  main313 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main315
                   Main.main28
                   Main.main315
                   Main.main314) -}
125b93f8e6e3e6e4b313ef81f47eb332
  main314 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
a7d885b440950be839752d082516fa10
  main315 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 179#) -}
e0a87a449a3e21eff79d078e9cb4bc87
  main316 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "should reload deck"#) -}
c2f1fce0d387e3bb4b73fa63542cb392
  main317 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main318) -}
f91367306c44663cd824fe469bb86cf9
  main318 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main319
                   GHC.Stack.Types.EmptyCallStack) -}
eca0e5d1cdd6ef480a5be3f25ccc86cd
  main319 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main321
                   Main.main39
                   Main.main321
                   Main.main320) -}
08f594d9f56d0c2133afecc9a3ed2897
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
afa7060fa03fb1f34b6bcd0baec99a59
  main320 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
3a3a961a7795e59750a804b0903edd57
  main321 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 172#) -}
f038b87617bf32c46dc3840a322e207b
  main322 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main324
                   Main.main323) -}
6474ac1e14ddd12b065683472559346b
  main323 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eloadDeck"#) -}
254f03e3af67a912626b4f8f4a4c905e
  main324 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
ba8ee9dd03119c8ed89054cb4889e319
  main325 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main361
                   Main.main326) -}
50da4f3caaf7d574f99d73ed069b690f
  main326 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main350
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main327) -}
22fb00a9604826f0ceb9c53b72f1272c
  main327 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main339
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main328
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
d4d7ad67db4594ee6cf37d3dcff58fea
  main328 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main329
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
69a9a3355a30d19f887a9cd38edf0f42
  main329 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main335
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main334
                        Main.main330
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
4c85029ca2e6151cdfa54c35d1206609
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
ac5fd574d7540251fca6bf5ecbf1579a
  main330 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Player
                   Main.main331
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowPlayer
                   Common.$fEqPlayer
                   (GHC.List.$w!! @ Common.Player ipv2 2#)
                   (Game.check
                      (GHC.List.reverse1
                         @ Common.Player
                         ipv2
                         (GHC.Types.[] @ Common.Player))
                      (GHC.List.$w!! @ Common.Player ipv2 3#))
                   ipv } }) -}
21148aac8219a53788220b4ecc00d007
  main331 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main332
                   GHC.Stack.Types.EmptyCallStack) -}
ba762d7ec81d31e68af3852412316ac8
  main332 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main333
                   Main.main28
                   Main.main333
                   Main.main174) -}
84f394c8df22b267ae160ab8ac4e42b1
  main333 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 169#) -}
fe1d1322e6cccdf6009c343ae5b0f6ab
  main334 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should reverse at player 3"#) -}
a764e5514dc47aacf1d7eb035aeda695
  main335 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main336) -}
c7ca203d707b49106597c5a878ca01f4
  main336 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main337
                   GHC.Stack.Types.EmptyCallStack) -}
2f0771042d047702a5639d64fc51c828
  main337 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main338
                   Main.main39
                   Main.main338
                   Main.main89) -}
e11368705426977c1ae8376b940b24d0
  main338 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 161#) -}
04477894251ce766c971cc5c84d3344e
  main339 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main340
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
abbf0366259fd4ed53c5bbe76cc91cec
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should start and end"#) -}
777e96bf8605afd3e45ae584e9d621b4
  main340 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main346
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main345
                        Main.main341
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
a74c3f70ab40bdc721cca8442533eeed
  main341 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Player
                   Main.main342
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowPlayer
                   Common.$fEqPlayer
                   (GHC.List.$w!! @ Common.Player ipv2 1#)
                   (Game.check
                      (GHC.List.reverse1
                         @ Common.Player
                         ipv2
                         (GHC.Types.[] @ Common.Player))
                      (GHC.List.$w!! @ Common.Player ipv2 2#))
                   ipv } }) -}
bd6e5c7d06a853db6f8d182ee4b7432d
  main342 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main343
                   GHC.Stack.Types.EmptyCallStack) -}
d187ce7ac9ac5850a43703524c9a7393
  main343 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main344
                   Main.main28
                   Main.main344
                   Main.main174) -}
fc77f31c0878f33c3da4e0d1f60d917a
  main344 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 160#) -}
bd2888a63449f2d7231cecf9f32c212e
  main345 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should reverse at player 2"#) -}
366a0e5b529a0ba16ca20cbebdabb40a
  main346 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main347) -}
46ca93a00c82402695cb378f9ce48434
  main347 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main348
                   GHC.Stack.Types.EmptyCallStack) -}
24afa9cbde48590428a2e115260524ad
  main348 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main349
                   Main.main39
                   Main.main349
                   Main.main89) -}
ab2c1da08fa000150b0b46e23b17bafd
  main349 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 152#) -}
7a1aad4cd1ff3eb533e5b9c4c5a07135
  main35 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main36) -}
2955fa35b031220618d8deaa6af5a2ae
  main350 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main351
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
a2d87d304db4dbb69618197a72551ab1
  main351 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main357
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main356
                        Main.main352
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
674bae3921cf0dfee95ec2b0ed2f7c83
  main352 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Player
                   Main.main353
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowPlayer
                   Common.$fEqPlayer
                   (GHC.List.$w!! @ Common.Player ipv2 3#)
                   (Game.check
                      (GHC.List.reverse1
                         @ Common.Player
                         ipv2
                         (GHC.Types.[] @ Common.Player))
                      (Game.check ipv2 Common.noPlayer))
                   ipv } }) -}
b38b2b2ca5cfc206ebeea1299d5aa063
  main353 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main354
                   GHC.Stack.Types.EmptyCallStack) -}
ac52fb25775cabe9b74e5ac913d113e7
  main354 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main355
                   Main.main28
                   Main.main355
                   Main.main174) -}
24563b1203e3e239f357e0537d5c1f4e
  main355 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 151#) -}
de4109473ea52d6c20ad41a5dcf0325c
  main356 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should reverse at player 0"#) -}
a0da51b02103dbd253f201ad4e878dfd
  main357 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main358) -}
5f82fa42174a4f88096690fe63ee900b
  main358 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main359
                   GHC.Stack.Types.EmptyCallStack) -}
b4d3896ddbe90106eccbfd7ee6d3947f
  main359 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main360
                   Main.main39
                   Main.main360
                   Main.main89) -}
3494ef25160cc11d97cc3cc5dba1371c
  main36 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main37
                   GHC.Stack.Types.EmptyCallStack) -}
8013a639c25614495503a632e33198ed
  main360 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 143#) -}
1800f9d3e28266e774c33ecdb993da54
  main361 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main324
                   Main.main362) -}
c721e0bc5e4d85bedc3e2218fd1a9553
  main362 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eversePlayers"#) -}
6407a809089cb699ff56c1cc45790490
  main363 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main425
                   Main.main364) -}
c55f7efe3c35806f66ea30fc439c67cf
  main364 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main414
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main365) -}
3d5c3d074d9d5c5786185455e9df3436
  main365 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main402
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main366) -}
570c160f97823011fef2efe3f491ce1f
  main366 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main390
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main367) -}
610b629c72516afde0c0ac7139fa2db1
  main367 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main379
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main368
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
ca1edb13566cb464edab1d7d8ce49c1d
  main368 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main369
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
8e9bf75c29a4207046000b1f14a10087
  main369 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main375
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main374
                        Main.main370
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
d176375019c0363a9ba76b520ccd4010
  main37 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main40
                   Main.main39
                   Main.main40
                   Main.main38) -}
fca2f795e008e211b3b7f8cf37ca8227
  main370 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Bool
                   Main.main371
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowBool
                   GHC.Classes.$fEqBool
                   (let {
                      gs :: Common.Player
                      = Game.check (Game.deal ww3 ww1) Common.noPlayer
                    } in
                    case Common.$fEqPlayer_$c== gs gs of wild1 {
                      GHC.Types.False -> Game.$wplayerHasWon gs
                      GHC.Types.True
                      -> case gs of wild {
                           DEFAULT
                           -> GHC.Classes.$fEq[]_$c==
                                @ Common.Card
                                Common.$fEqCard
                                (GHC.Types.[] @ Common.Card)
                                (GHC.Types.[] @ Common.Card)
                           Common.NoPlayer ipv2
                           -> case Game.drawAndEnd3 ret_ty GHC.Types.Bool of {} } })
                   GHC.Types.True
                   ipv } }) -}
03616b5e97d45098a4db4cbfaa05fe2b
  main371 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main372
                   GHC.Stack.Types.EmptyCallStack) -}
8eae44854cfb28be135f835bda6386f9
  main372 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main373
                   Main.main28
                   Main.main373
                   Main.main209) -}
c8a174d49e6f5ecbb2c79ec97780cc46
  main373 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 140#) -}
6d0ddc4707a2a6318bb035b14c045672
  main374 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should declare an overall winner"#) -}
e9d7c7a3543054e2c7e047e30f3fbdfe
  main375 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main376) -}
d4f56159842cf283509497f1c7d9f1b0
  main376 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main377
                   GHC.Stack.Types.EmptyCallStack) -}
a59d9b5ff83ee15c6251c3f5ec958eca
  main377 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main378
                   Main.main39
                   Main.main378
                   Main.main128) -}
df773e9485de24e621f09d7c5ba814ed
  main378 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 134#) -}
8b9ed2d96b730ae49830bcc772b2e732
  main379 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main380
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
4951e0fd64204906563e8e6630904bae
  main38 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
e676b0e0d1e209ab70b2bec3d08218c9
  main380 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main386
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main385
                        Main.main381
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
a5d48f16e31fd222b64e9430d1229b31
  main381 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Bool
                   Main.main382
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowBool
                   GHC.Classes.$fEqBool
                   (let {
                      gs :: Common.Player
                      = Game.check (Game.deal ww3 ww1) Common.noPlayer
                    } in
                    case Common.$fEqPlayer_$c== gs gs of wild1 {
                      GHC.Types.False -> Game.$wplayerHasWon gs
                      GHC.Types.True
                      -> case gs of wild {
                           DEFAULT
                           -> GHC.Classes.$fEq[]_$c==
                                @ Common.Card
                                Common.$fEqCard
                                (GHC.Types.[] @ Common.Card)
                                (GHC.Types.[] @ Common.Card)
                           Common.NoPlayer ipv2
                           -> case Game.drawAndEnd3 ret_ty GHC.Types.Bool of {} } })
                   GHC.Types.True
                   ipv } }) -}
bf9735fa43dcb50825f8a4b8d53cefa9
  main382 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main383
                   GHC.Stack.Types.EmptyCallStack) -}
ed118a6029f2b7cc1f6b417b7688532f
  main383 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main384
                   Main.main28
                   Main.main384
                   Main.main147) -}
e2de169f7771428559cf76422c704c58
  main384 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 133#) -}
8ce856f7e7fcbbae23ed7fd2a8cc76a3
  main385 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should declare a round winner"#) -}
58a5128ac13812f9f3345b59adf2a8e2
  main386 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main387) -}
16b0640b143693cef7edfda59f6bde94
  main387 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main388
                   GHC.Stack.Types.EmptyCallStack) -}
9a2e046dce9d712fac60af1d09237685
  main388 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main389
                   Main.main39
                   Main.main389
                   Main.main209) -}
043116a2fa878201f5c18be95eb94a60
  main389 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 127#) -}
a7acb9c81cb387d2607711df0971ac6a
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
23e659e7e5c47f9947637297f1aa5543
  main390 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main391
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
a167dc045d19845e342f1d2e62a9f714
  main391 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main398
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main397
                        Main.main392
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
33ce7d90ad1a6483a98e9bffa5a50a89
  main392 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Player
                   Main.main393
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowPlayer
                   Common.$fEqPlayer
                   (Game.check ipv2 (GHC.List.$w!! @ Common.Player ipv2 3#))
                   (GHC.List.head @ Common.Player ipv2)
                   ipv } }) -}
eca14d62e3b7ed080dfb3c7222f30677
  main393 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main394
                   GHC.Stack.Types.EmptyCallStack) -}
25a9616bb954444d91e8934b6795bb19
  main394 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main396
                   Main.main28
                   Main.main396
                   Main.main395) -}
38eb571a876e00b229ca7b89ea8e0401
  main395 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 57#) -}
c45119cc7c1633af98b1128b890ccdbc
  main396 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 126#) -}
048da13f9fd531f375c0d4e3c93edc22
  main397 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should turn around and pick first player"#) -}
1b551eef8b4d4c39ca08867c85ed520f
  main398 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main399) -}
33ea6350047e30f3fc528cf3f7b1cea7
  main399 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main400
                   GHC.Stack.Types.EmptyCallStack) -}
2209725c698fe2b139777b4f88284a6e
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
18782ca8dc5210e31e1fe99f2cd1132e
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 334#) -}
18f3f37032a670f4e4df1fd23f829601
  main400 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main401
                   Main.main39
                   Main.main401
                   Main.main72) -}
01db43c75c248945201965e38b5741d1
  main401 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 120#) -}
4fead7be345d26c1791bf280a0ca259e
  main402 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main403
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
6cf20868bc700156aeaac73935eb2244
  main403 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main410
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main409
                        Main.main404
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
9cea46132cb419b1120d84cb970fa2aa
  main404 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Player
                   Main.main405
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowPlayer
                   Common.$fEqPlayer
                   (Game.check ipv2 (Game.check ipv2 Common.noPlayer))
                   (GHC.List.$w!! @ Common.Player ipv2 1#)
                   ipv } }) -}
0cf4c883cce8bf991182a874eaca6e57
  main405 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main406
                   GHC.Stack.Types.EmptyCallStack) -}
51cb080ca371a984a73c677e2f942d7a
  main406 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main408
                   Main.main28
                   Main.main408
                   Main.main407) -}
133c1fce537a52fdd0148c8a58401aa2
  main407 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 55#) -}
184c7f81d94ab9f305c5de959d63b5ed
  main408 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 119#) -}
f3228b5bddf9c3b1b2801471cde9215d
  main409 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should double pick second player"#) -}
4db74dea926d03750bd3ee6f484ea0ef
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
c1cc6a434f8277d3e886482478ee2df9
  main410 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main411) -}
e9db11d7dcbb070aaf6d4df87fdf2f4b
  main411 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main412
                   GHC.Stack.Types.EmptyCallStack) -}
612eb24e7228c8ed80d695f521000cd3
  main412 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main413
                   Main.main39
                   Main.main413
                   Main.main128) -}
e568d509709c3a8123107b2addf69134
  main413 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 113#) -}
697afb0c6235c02194e6317b18c2f803
  main414 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main415
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
d59636dc156d481508b9a81cedf60297
  main415 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main421
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main420
                        Main.main416
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
7d2c1855b50456fbe7c0351674246492
  main416 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Player
                   Main.main417
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowPlayer
                   Common.$fEqPlayer
                   (Game.check ipv2 Common.noPlayer)
                   (GHC.List.head @ Common.Player ipv2)
                   ipv } }) -}
de5be30bed3eaa55e622d42a81774d28
  main417 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main418
                   GHC.Stack.Types.EmptyCallStack) -}
db76fd24b780600e596d4a2ca6372c9e
  main418 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main419
                   Main.main28
                   Main.main419
                   Main.main395) -}
9622a9150b9966697ffd9a3a645cbaad
  main419 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 112#) -}
fbce415ef22a570b5d5a8a2e178191b7
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main44
                   Main.main43) -}
f79470e2e6807ef8f5e23cce1cc38c99
  main420 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should pick first player"#) -}
7b11c5581658374cc6aea19381b994b1
  main421 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main422) -}
1f9bdc0036f4abee2f5e65651b1a309a
  main422 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main423
                   GHC.Stack.Types.EmptyCallStack) -}
3f2e0b83a40750240c30cc6943d931bc
  main423 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main424
                   Main.main39
                   Main.main424
                   Main.main115) -}
b7edb5a6cd51b179097859786556714a
  main424 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 107#) -}
c5056793487420587305d834f875b1b8
  main425 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main158
                   Main.main426) -}
3d3d1113375ab71e2c87c3c60198a4d0
  main426 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ickNextPlayer"#) -}
776db0453e1fb2bd9f651f94677ee408
  main427 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main480
                   Main.main428) -}
ebfc1a14b161197b9dfda94368459cb9
  main428 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main467
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main429) -}
886f358e7f562ddbc97a84c8fd178cd4
  main429 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main455
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main430) -}
57e8b259be5e802e745f86cf75dc79fc
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ame..."#) -}
618e8323dcff0cc5658308c812b0948d
  main430 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main443
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main431
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
89ef71bd222490fe0247a5bea93164f8
  main431 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main432
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
a2640a15a64d10595101d4afe814d549
  main432 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main439
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main438
                        Main.main433
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
cc266fe0ab019db49109c404f7614ec5
  main433 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main434
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case GHC.List.$wlenAcc
                           @ Common.Card
                           (Game.discard ww4 ww3)
                           0# of ww7 { DEFAULT ->
                    GHC.Types.I# ww7 })
                   Main.main299
                   ipv } }) -}
0162eb8c3888f2976a4f9ab0b99e877b
  main434 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main435
                   GHC.Stack.Types.EmptyCallStack) -}
825caba790a2c50bbe2292616a20a726
  main435 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main437
                   Main.main28
                   Main.main437
                   Main.main436) -}
9ca71bff8804fe576601c8e0797d95b8
  main436 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
b698825e83d75de3fe9076ec06b42f76
  main437 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 104#) -}
1b83c4779ffbbc859c449c18867532b4
  main438 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should put 1 card in discard"#) -}
a665fcf15e8015b9f3fe5ff47fed0828
  main439 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main440) -}
50551f598f5ade36ca337cd0e786d2f7
  main44 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'G'#) -}
22d03698a162fec2695f0cf350706f96
  main440 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main441
                   GHC.Stack.Types.EmptyCallStack) -}
ec3bc783b9240857bda148d8fb45fa00
  main441 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main442
                   Main.main39
                   Main.main442
                   Main.main147) -}
8e17e235394ad535d71c6cfc020bd163
  main442 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 100#) -}
9ac0e35a341bddd9f21939f850d3e99e
  main443 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main444
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
1b9ee8f6f9dbb3c6108950d463b75338
  main444 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main451
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main450
                        Main.main445
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
e94082f0627e4031818208d8e2872b96
  main445 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main447
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case GHC.List.$wlenAcc @ Common.Card ipv1 0# of ww7 { DEFAULT ->
                    GHC.Types.I# ww7 })
                   Main.main446
                   ipv } }) -}
67f5e93d7ffc69d95cd8d13e62ac3083
  main446 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 79#) -}
b6f6c108350e95139e699aef3114f95b
  main447 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main448
                   GHC.Stack.Types.EmptyCallStack) -}
8f41a7d2a9fc8d6593d07a1b8a3e3411
  main448 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main449
                   Main.main28
                   Main.main449
                   Main.main147) -}
0a7ea30bb93968f0ec8b612a2a2999c4
  main449 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 99#) -}
6da9ef5261aa5f32c6d3cf7182e0470c
  main45 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main156
                   Main.main46) -}
d4a5b9f7079288156783f5b7233ccc1c
  main450 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should remove cards from deck"#) -}
bed0f70be23f2c23ac36baa4fea2b5ac
  main451 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main452) -}
20faa2be5fb36b7a5f564fa30012f8ef
  main452 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main453
                   GHC.Stack.Types.EmptyCallStack) -}
1b81b11df311192388bd585915b69462
  main453 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main454
                   Main.main39
                   Main.main454
                   Main.main209) -}
faff2d978f26b245115b398c0501b17a
  main454 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 95#) -}
118658e711c8a5a3f92426134a796ae3
  main455 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main456
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
65048ccbe1c2c3337ca9103c15c8ff71
  main456 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main463
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main462
                        Main.main457
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
a27bfbb10a41f98a17a28ff51aa6f4e1
  main457 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Bool
                   Main.main458
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowBool
                   GHC.Classes.$fEqBool
                   (Main.main_go6 (Game.deal ww3 ww1)) `cast` (Data.Monoid.N:All[0])
                   GHC.Types.True
                   ipv } }) -}
3f6ac494ad9fba85330d1bab77146a8a
  main458 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main459
                   GHC.Stack.Types.EmptyCallStack) -}
6da21d1969851cc8218c79832ad91fed
  main459 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main461
                   Main.main28
                   Main.main461
                   Main.main460) -}
9a29db334f1ea65b1001f0b7692a96d8
  main46 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main142
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main47) -}
0822156ddf2d4e252056f58b8be5ae69
  main460 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 92#) -}
087a6bfa4b78d0d572a5e37cd40598f5
  main461 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 94#) -}
c8cbb5a09997c501409f8bfa9aa2321c
  main462 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should distribute cards to players"#) -}
fa72b9c0b2e9b689172d50d4eef23002
  main463 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main464) -}
6042fbed148c59e602ec404f91c9df57
  main464 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main465
                   GHC.Stack.Types.EmptyCallStack) -}
58891867e3855b6ac24c28aa1bf29338
  main465 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main466
                   Main.main39
                   Main.main466
                   Main.main102) -}
6c854b596885c5c7bffa73f097c12c1f
  main466 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 90#) -}
5f8a102cddc7c8c6844ad0a352097bf8
  main467 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main468
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
44af4ffd41ff92142c9add29d0408f46
  main468 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main475
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main474
                        Main.main469
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
7e1c0ce551522d1434ddf86a3bf599c9
  main469 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldNotBe1
                   @ Common.Deck
                   Main.main470
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow[]
                   Main.$s$fEq[]
                   ipv1
                   ww3
                   ipv } }) -}
03dffa6f52d7de0efbd7e893365f2377
  main47 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main130
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main48) -}
f8927153d131aeb4a44af93db7dcaa27
  main470 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main473
                   Main.main471
                   GHC.Stack.Types.EmptyCallStack) -}
9e4b9ac1ed8b2208fec3792c9079cd23
  main471 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main472
                   Main.main28
                   Main.main472
                   Main.main27) -}
25bc835d178bc6c3acdcd563318075b6
  main472 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 89#) -}
b6804494d3d0589589c7d3b1f0a26485
  main473 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldNotBe"#) -}
4757cbd4ce114f47461d198f13631331
  main474 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should shuffle the deck"#) -}
3271ae3b35d9ae8b403a356848a57871
  main475 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main476) -}
5c76059181aa75e5cb7a0f64ebf144f5
  main476 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main477
                   GHC.Stack.Types.EmptyCallStack) -}
2101eb7a2126d99704783e45041725b4
  main477 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main479
                   Main.main39
                   Main.main479
                   Main.main478) -}
0b1b5e0dd66219d13cd926afe149ebcf
  main478 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
a6ade9f28cdcdc2e5271268de7959e90
  main479 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 85#) -}
1f3869ef5038805fb3516a2e9c173656
  main48 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main117
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main49) -}
7cdf1a285f3c9967c7fb4e5248d17f06
  main480 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main482
                   Main.main481) -}
bfce628446179bb017471fb325554584
  main481 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "etupGame"#) -}
572a8e539b252b9ae57f34cd0561dcc3
  main482 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 's'#) -}
7fe091be6643d9d848499f7492ff2bd1
  main483 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main524
                   Main.main484) -}
17ae88de27f80154678abd3fc53268df
  main484 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main512
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main485) -}
60c26f667866581a3677b36609e88470
  main485 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main499
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main486
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
649a71ad3787bfb087f5a955845f31e6
  main486 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main487
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9d7dc294e9eddf9b6e872081c1657dcc
  main487 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main495
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main494
                        Main.main488
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
7734552471d98ab5268cf6133a830e1b
  main488 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main491
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main490
                   Main.main489) -}
825f60b9a4ee03690df66f80ee99f46a
  main489 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
3ffb0e11a66b687bc1ac7b88b8f62eb1
  main49 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main104
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main50) -}
08be0dc12e1e3bd7f322e8dd58dcf81c
  main490 :: GHC.Types.Int
  {- Unfolding: (case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case GHC.List.$wlenAcc @ Common.Card ww4 0# of ww7 { DEFAULT ->
                 GHC.Types.I# ww7 } }) -}
08b4542fa9627c673ed9b700404e1277
  main491 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main492
                   GHC.Stack.Types.EmptyCallStack) -}
a299dc4df7dc28864dc6ce64578dcf5a
  main492 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main493
                   Main.main28
                   Main.main493
                   Main.main209) -}
93d7148a0783e5a39365d5ce1357ee7d
  main493 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 82#) -}
262a2d3f7eb00100c62a407190144fa9
  main494 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should initialize discard pile to empty"#) -}
896cdded4d72b3d7e58614f46b9319dc
  main495 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main496) -}
03993207a18b872e637a2c396453d8ce
  main496 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main497
                   GHC.Stack.Types.EmptyCallStack) -}
1e7f2f93c7ef101e20e2e9af23643a02
  main497 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main446
                   Main.main39
                   Main.main446
                   Main.main498) -}
1ecb6a0747e522c9928976374ce21754
  main498 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49#) -}
03064a858754a29213853a4fad3789ae
  main499 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main500
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
7756883e89206d07ca6a586495b1e16c
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main669
                   Main.main6) -}
c3d6eec1ce84d207a910269ced13fde0
  main50 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main91
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main51) -}
f38a49ff6e2cd3d2604098c6e699650a
  main500 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main508
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main507
                        Main.main501
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
4404f87ff3817eecc7e70347a1e89b29
  main501 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main504
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main503
                   Main.main502) -}
0eaf331f4647d38197b1c50a16b73345
  main502 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 108#) -}
8d0036059d90ebe6a8843141c360e99b
  main503 :: GHC.Types.Int
  {- Unfolding: (case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case GHC.List.$wlenAcc @ Common.Card ww3 0# of ww7 { DEFAULT ->
                 GHC.Types.I# ww7 } }) -}
ee44a8f0198d3630d5d7853d6a4fcb11
  main504 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main505
                   GHC.Stack.Types.EmptyCallStack) -}
8c4c67508d6b68cf3917e90c71dfe1cd
  main505 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main506
                   Main.main28
                   Main.main506
                   Main.main147) -}
feac109a5efdd0674334ec5be4e7c99e
  main506 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 78#) -}
59bd075bd5dfdafd5f30281b3dd06a7c
  main507 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should initialize the deck with 108 cards"#) -}
e7f83d2f4951853de3544a5cd1164819
  main508 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main509) -}
671362e66a4fc6fa27ac32884e72fcd3
  main509 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main510
                   GHC.Stack.Types.EmptyCallStack) -}
024231e53fe21d0b89dfbcec2f15233f
  main51 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main79
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main52) -}
119432a6abe69956fbcca9f60f9668e7
  main510 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main511
                   Main.main39
                   Main.main511
                   Main.main192) -}
f89afe489ea4ff1bed31e064445c60b4
  main511 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 75#) -}
6e1286a7a036a2a1848c4ebf49c91a7a
  main512 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main513
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
fa4d4749225077334239f5a10eebe340
  main513 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main520
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main519
                        Main.main514
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
12ac8edae6da9ff4eed3f02d40ef5694
  main514 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main516
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main515
                   Main.numberOfTestPlayers) -}
0d1ce97b110a9dfdeb22e764e0b5077e
  main515 :: GHC.Types.Int
  {- Unfolding: (case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case GHC.List.$wlenAcc @ Common.Player ww1 0# of ww7 { DEFAULT ->
                 GHC.Types.I# ww7 } }) -}
fddcee99ac89aa946edcce1f6bb8284a
  main516 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main517
                   GHC.Stack.Types.EmptyCallStack) -}
58cb88668c7ad484af467f2d0de34fbb
  main517 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main518
                   Main.main28
                   Main.main518
                   Main.main209) -}
e4fb37fbf6c3ed65b75794ebb2eef69d
  main518 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 74#) -}
ddc16684e32a6daa48bdf45242e97a9b
  main519 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should create 4 players"#) -}
18b1c8fadf91bfb2341fa1938363172f
  main52 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main66
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main53
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
9e14f3d07958ad7b0593f26a6432be33
  main520 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main521) -}
0fc79980e7c8c46b8c4a88b8c87d4962
  main521 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main522
                   GHC.Stack.Types.EmptyCallStack) -}
5b91752582eb057da6a6f54bb7ec1d81
  main522 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main523
                   Main.main39
                   Main.main523
                   Main.main478) -}
2ec5bc28966090229e21a4f14dd7e33a
  main523 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 71#) -}
36858721b6df17f7026aa49e84d97b6d
  main524 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main526
                   Main.main525) -}
6b4581b451f5cc60725f197cedeb16b2
  main525 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nitGame"#) -}
0421fe93854a671d1b1c60093067cfe1
  main526 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'i'#) -}
778a4885d5c6f26505e5240b95dca9f1
  main527 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main44
                   Main.main528) -}
2340c7d233b989cbc80226f23a75f419
  main528 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ame"#) -}
9405a2c9d4090ad36338af4c7ad0d14d
  main529 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main541
                   Main.main530
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
8def71f6e50e9164a47b440ebe389bfe
  main53 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main54
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
2b89694fff5e5ed4eec7dcb50f79e4e8
  main530 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main531
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
dcf884c893be54bd8be8fd66db2d5730
  main531 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main537
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main536
                        Main.main532
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
e0bf799cec5e3b9a129fd8f1571a051f
  main532 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         Common.fullDeck)
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldNotBe1
                   @ Common.Deck
                   Main.main533
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow[]
                   Main.$s$fEq[]
                   ipv1
                   Common.fullDeck
                   ipv }) -}
c76e1dd6a16fd064c933838b45834311
  main533 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main473
                   Main.main534
                   GHC.Stack.Types.EmptyCallStack) -}
7ff9de729887ec698009bef6514c7c38
  main534 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main535
                   Main.main39
                   Main.main535
                   Main.main209) -}
4aa37ff56980cdb8cc7d580d6da241c7
  main535 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 66#) -}
e8667b31703d8ce3d23acf1d32b49443
  main536 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Perform shuffling of cards"#) -}
cfb362c0a43cc34e3984aa1b83db9147
  main537 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main538) -}
4e0d2c9e4eab21a50385f07e38d0cd52
  main538 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main539
                   GHC.Stack.Types.EmptyCallStack) -}
e8bd2f45566f3f2c70c71d2248c73738
  main539 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main96
                   Main.main540
                   Main.main96
                   Main.main115) -}
6be8ac9060a49434eb5b18c8c488114f
  main54 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main61
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main60
                        Main.main55
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
102c132a109982cb3d5166d7625e7f7e
  main540 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3#) -}
505e0f066bd52c423626fc7af841b71a
  main541 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main543
                   Main.main542) -}
fca7a6e11b3c04f7abb38fb2419aad49
  main542 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "huffler"#) -}
78613d977e0913966c4947ceb44ee658
  main543 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'S'#) -}
ac8871f40e8d2c126580f616397f2430
  main544 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main637
                   Main.main545) -}
ae608d92cc4abb1336540e78415ba243
  main545 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main579
                   Main.main546) -}
490f1c193a8950d9e93580f0acbe9faf
  main546 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main547
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
c05436e14ea4933a7a2c8551e3bacf11
  main547 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main576
                   Main.main548) -}
0fafefff9af3b6540ca42e6a487c4551
  main548 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main565
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main549
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
2f5aa003cd639b2c889cbad13b2b52d4
  main549 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main550
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
5877356423687c7b122a09f98e009d89
  main55 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 let {
                   gs' :: Common.Player = Game.check ipv2 Common.noPlayer
                 } in
                 case Game.drawAndEnd2
                        Game.playPlayer3
                        (Common.State ipv2 ww2 ipv1 (Game.discard ww4 ww3) gs')
                        gs'
                        ipv of ds1 { (#,#) ipv3 ipv4 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case GHC.List.$w!! @ Common.Player ipv2 0# of wild {
                      Common.HPlayer ds2 ds3
                      -> case GHC.List.$wlenAcc @ Common.Card ds3 0# of ww7 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.+# ww7 2#) }
                      Common.AiPlayer ds2 ds3
                      -> case GHC.List.$wlenAcc @ Common.Card ds3 0# of ww7 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.+# ww7 2#) }
                      Common.NoPlayer ipv5
                      -> case Common.hand1 ret_ty GHC.Types.Int of {} })
                   (case GHC.List.$w!!
                           @ Common.Player
                           (Common.players ipv4)
                           0# of wild {
                      Common.HPlayer ds2 ds3
                      -> case GHC.List.$wlenAcc @ Common.Card ds3 0# of ww7 { DEFAULT ->
                         GHC.Types.I# ww7 }
                      Common.AiPlayer ds2 ds3
                      -> case GHC.List.$wlenAcc @ Common.Card ds3 0# of ww7 { DEFAULT ->
                         GHC.Types.I# ww7 }
                      Common.NoPlayer ipv5
                      -> case Common.hand1 ret_ty GHC.Types.Int of {} })
                   ipv3 } } }) -}
55fb52569d96c198069a0d1326d1827b
  main550 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main562
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main561
                        Main.main551
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
c263eaa6905daa247fed5877537ec712
  main551 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Common.Hand
                   Main.main558
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow[]
                   Main.$s$fEq[]
                   Main.main556
                   Main.main552) -}
c9f30908f0675a07421cb4e0ca6ee049
  main552 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ Common.Card Main.redOne Main.main553) -}
5197923584d99770be7d3a68a99e60b9
  main553 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.yellowTwo
                   Main.main554) -}
473f6b5a97a5cd7c1f35e8aebbf915ea
  main554 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main555) -}
ea481e82a2dab863e332a12860bb90c9
  main555 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.whiteFour
                   (GHC.Types.[] @ Common.Card)) -}
60941b91700d5e451c941863650989b0
  main556 :: Common.Hand
  {- Unfolding: (case Common.$wtakeCards
                        Main.main557
                        Main.testDeck of ww { (#,#) ww1 ww2 ->
                 ww2 }) -}
7a72440bc814ad213d7c4ff6eef9e90b
  main557 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   (GHC.Types.[] @ Common.Card)) -}
1bb964cb4efe082e7b0e5d404c0b548e
  main558 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main559
                   GHC.Stack.Types.EmptyCallStack) -}
f8b7526620aa1cc1008d2be5fff15034
  main559 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main234
                   Main.main28
                   Main.main234
                   Main.main560) -}
00059f7214fd865b273141fe2bcb566a
  main56 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main57
                   GHC.Stack.Types.EmptyCallStack) -}
c00ce726393b97865725b6eff7dd8ba8
  main560 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
43983ae490f467cec98ef737380cfc19
  main561 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should ONLY take 1 blueThree card"#) -}
6f1111ed8d0b9bba1368ea8c6fcef34d
  main562 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main563) -}
bcfd7c59ccf9fd275e8d3d0853cafb67
  main563 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main564
                   GHC.Stack.Types.EmptyCallStack) -}
02c961487085c39858e6c7a878b1681f
  main564 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main72
                   Main.main39
                   Main.main72
                   Main.main240) -}
861ddd924f9715fad0d3018e3f35688f
  main565 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main566
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
41ccbbe0e9975f30929dc467ba2979c6
  main566 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main572
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main571
                        Main.main567
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
d363a0f5a61686d4a9ea5ebef1170443
  main567 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Common.Hand
                   Main.main569
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fShow[]
                   Main.$s$fEq[]
                   Main.main568
                   Main.main557) -}
e6b4a20f4d92398977b4531c0d3d8e2e
  main568 :: Common.Hand
  {- Unfolding: (case Common.$wtakeCards
                        Main.main557
                        Main.testDeck of ww { (#,#) ww1 ww2 ->
                 ww1 }) -}
1ef42c7f78fa0779987af6eafc806914
  main569 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main570
                   GHC.Stack.Types.EmptyCallStack) -}
d5a9abdf1edd9f253ecb54264a3f4ba3
  main57 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main59
                   Main.main28
                   Main.main59
                   Main.main58) -}
c48a3bc3dfd958358b769a5d06f3815a
  main570 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main498
                   Main.main28
                   Main.main498
                   Main.main115) -}
0c5a61ec88d29db9363f822432bc7fdf
  main571 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should take blueThree card"#) -}
f4c585c8bcbb3854559508fee3c19ef5
  main572 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main573) -}
97e6a0ef8a451005850144545929ca6c
  main573 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main574
                   GHC.Stack.Types.EmptyCallStack) -}
ea7014ef28e282e79c596f3613842522
  main574 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main575
                   Main.main39
                   Main.main575
                   Main.main89) -}
3fe06886ad8134169e775c810a3ed2d5
  main575 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 47#) -}
c1b56b9cba488c1a9ff2efd776d62d2f
  main576 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main578
                   Main.main577) -}
92cc12b76ebbc9f4639518a8b1fd08a7
  main577 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tils..."#) -}
7059d491189c819d21bd3cd7403bc6c0
  main578 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'U'#) -}
0df36a8da3f208d4c6ec808d69ecc21f
  main579 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main634
                   Main.main580) -}
f86f66a665c2d1c7f219b7bdd2734b56
  main58 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 70#) -}
3263cba99af141a96ca498efa16b601a
  main580 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main625
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main581) -}
d6d3b01a44470236939b2f4b30eaf45b
  main581 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main616
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main582) -}
1f63b2c0907cb60a8da8ab61171e93f3
  main582 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main607
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main583) -}
a36764808e344b5f6cdd930b9a72f35d
  main583 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main594
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main584
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
40dfd184d783128c5d381c8f08392345
  main584 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main585
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e966fbb2bddac4a3da7ac1a81919593c
  main585 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main591
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main590
                        Main.main586
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
321f3b369828a2da117a393ae539e0ec
  main586 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main588
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main587
                   Main.main502) -}
92661c872a2d5c85dea3783f67efac3a
  main587 :: GHC.Types.Int
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ Common.Card
                        Common.fullDeck
                        0# of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
8f88956876024a4e6ccc0ed1379ee5d4
  main588 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main589
                   GHC.Stack.Types.EmptyCallStack) -}
b608de2d5a5a3113709cd4917182af4b
  main589 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main102
                   Main.main28
                   Main.main102
                   Main.main209) -}
7cad6dcd51498d9b26323066fdc78620
  main59 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 331#) -}
de38112b3e6c5761aabef92b39046ceb
  main590 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Full deck has 108 cards"#) -}
50b84d6043aedcbda47b356372045b35
  main591 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main592) -}
84040ec9e5c1e91d2ae71a57d25aeaec
  main592 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main593
                   GHC.Stack.Types.EmptyCallStack) -}
dd2cece7c58f8880b70a558c43a7d707
  main593 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main240
                   Main.main39
                   Main.main240
                   Main.main478) -}
f8abd737d0030c2790b3194c460b6803
  main594 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main595
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d9e570c6fede1060f7146b8fc71a6928
  main595 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main603
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main602
                        Main.main596
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
f7987339232ba364d10b0c5f101fd33e
  main596 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Common.Value
                   Main.main599
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowValue
                   Common.$fEqValue
                   Main.main597
                   Common.One) -}
589b005bf0aec43edbd7f42a2df078b9
  main597 :: Common.Value
  {- Unfolding: (case Main.main_go7
                        Main.main598
                        (GHC.List.lastError @ Common.Card) of wild { Common.Card ds1 ds2 ->
                 ds2 }) -}
494717d308cd1c3e610f5d6a5c56d4e8
  main598 :: [Common.Card]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main149) -}
2507b54057132763123ca0826a9435e4
  main599 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main600
                   GHC.Stack.Types.EmptyCallStack) -}
d8a0e3fbdff3d7c7831f5d5d846181bb
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main639
                   Main.main7) -}
797882b7f81e986e00bd8ac3a448741d
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should draw 2 cards"#) -}
5355a7eddbc4ff9eb92af6c1f63469c6
  main600 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main128
                   Main.main28
                   Main.main128
                   Main.main601) -}
0ddc7ffcbcba435a3dec4d874f35a27c
  main601 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
5614a70ad834e25bcf16bf993ecb483a
  main602 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Johnny's last card is One"#) -}
8901574e4277ca4fee84f6ec5335e9a3
  main603 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main604) -}
623510d29721393ad567be6e3f93b006
  main604 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main605
                   GHC.Stack.Types.EmptyCallStack) -}
de8b5d85e6a741e5d6de4c163c0bf944
  main605 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main27
                   Main.main39
                   Main.main27
                   Main.main606) -}
eb41c38422215c22853f86e14d943847
  main606 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 35#) -}
a684031e550f49f1779ce63fbd47b48c
  main607 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main608
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
1a070b67d6ea57087ebba206bbcfa2a3
  main608 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main613
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main612
                        Main.main609
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
afdcbf7f5adc4bbf16dc71b9f43d2115
  main609 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ System.Console.ANSI.Common.Color
                   Main.main610
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   System.Console.ANSI.Common.$fShowColor
                   System.Console.ANSI.Common.$fEqColor
                   System.Console.ANSI.Common.Blue
                   System.Console.ANSI.Common.Blue) -}
701b658b9162787d0b913047cffb0ac2
  main61 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main62) -}
b1475dd549f2405aca73d5601c659091
  main610 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main611
                   GHC.Stack.Types.EmptyCallStack) -}
2e232159189c703b6e86902bd2905ce6
  main611 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main436
                   Main.main28
                   Main.main436
                   Main.main407) -}
5542888666aa5c06940ace8ebed0084f
  main612 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Johnny's first card is Blue"#) -}
2655aa8ecdca3a35f4a9cac7776a6330
  main613 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main614) -}
a89b14167861260fcff296c381bdd8ba
  main614 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main615
                   GHC.Stack.Types.EmptyCallStack) -}
bb489165d96c755142fa75dac1521e64
  main615 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main209
                   Main.main39
                   Main.main209
                   Main.main174) -}
73f721c8ebe38d83a517a38a0bd19116
  main616 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main617
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
17e39284f4593b597f31bea7c3e68886
  main617 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main622
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main621
                        Main.main618
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
b195eca92a494dc1ebc45c7a53e0a4d7
  main618 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Common.Value
                   Main.main619
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowValue
                   Common.$fEqValue
                   Common.Three
                   Common.Three) -}
49b021ee848f11b2727c73f82aba4f9b
  main619 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main620
                   GHC.Stack.Types.EmptyCallStack) -}
3c9dfff27644fbf443001c093dfeb239
  main62 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main63
                   GHC.Stack.Types.EmptyCallStack) -}
82b8996e2a0692e6002bc532b527fe78
  main620 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main147
                   Main.main28
                   Main.main147
                   Main.main27) -}
02678c63adc9d3daee6db0dc1c570a72
  main621 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Card with value Three is Three"#) -}
44ac43a615fa334dc7d17f91e9bcfba1
  main622 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main623) -}
7d7ee6bea195158acb9be3baa631c045
  main623 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main624
                   GHC.Stack.Types.EmptyCallStack) -}
8af05763237b269374583185d35a7d05
  main624 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main174
                   Main.main39
                   Main.main174
                   Main.main436) -}
177e05866b509ba8707f2b96b5d4693e
  main625 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main626
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
bb2a549c8a8953d8a124590ea27df2a3
  main626 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main631
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main630
                        Main.main627
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
0cef01d80cb093c62af1ec6f8629b37c
  main627 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ System.Console.ANSI.Common.Color
                   Main.main628
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   System.Console.ANSI.Common.$fShowColor
                   System.Console.ANSI.Common.$fEqColor
                   System.Console.ANSI.Common.Blue
                   System.Console.ANSI.Common.Blue) -}
a279ce1c23837205bba65a017d5356d3
  main628 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main629
                   GHC.Stack.Types.EmptyCallStack) -}
4668d7d2fd21f4abf5589877ba187340
  main629 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main89
                   Main.main28
                   Main.main89
                   Main.main436) -}
f34ab828fcb67f230a23e585e0f0ada7
  main63 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main65
                   Main.main39
                   Main.main65
                   Main.main64) -}
8998627916815a346a270422aefb9380
  main630 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Card with color Blue is Blue"#) -}
16f94a1e15cd0a225134682c5e8d22fb
  main631 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main632) -}
d1d22b9bcdb4caf592b6b29774ec93a0
  main632 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main633
                   GHC.Stack.Types.EmptyCallStack) -}
01d61887a9cf75bdb729efe77e22cf93
  main633 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main606
                   Main.main39
                   Main.main606
                   Main.main147) -}
e58c4f48a790b8adcb2f189540b86924
  main634 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main636
                   Main.main635) -}
7fd19f22376514df5cd23916e944322c
  main635 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ards..."#) -}
d5172f0118d9131c3b57b159e2dd4e85
  main636 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'C'#) -}
ff8fc003f61edccfc2b704ab6141ed70
  main637 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main636
                   Main.main638) -}
3d233b10783a20eaea0d5eaf0ea03530
  main638 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ommon"#) -}
5cae558ed41e51890ac726febca92386
  main639 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main667
                   Main.main640) -}
6c8240dd59c66cbd895572b31cb068d6
  main64 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
b3a3b87cccf57533b74d94a6f99d6111
  main640 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main654
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main641
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
d4cfa0952b2fc7a0ba2f666b48a21a2a
  main641 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main642
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
92b9702e6a44ab84d6b97a119c478ac5
  main642 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main651
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main650
                        Main.main643
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
3a0aeb2ee433d4621314d88075e2bd97
  main643 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Base.String
                   Main.main647
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShow[]_$s$fShow[]1
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   Main.main645
                   Main.main644) -}
8e2308b88fc3adf3ae9b9a7a77182326
  main644 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hello World"#) -}
264888b1d3232875b60f88b455a7a42d
  main645 :: GHC.Base.String
  {- Unfolding: (UnoI.unoInteractive
                   @ GHC.Integer.Type.Integer
                   GHC.Real.$fIntegralInteger
                   Main.main646) -}
85747adfd6c1bc3af22c92672368d8d1
  main646 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
2cfb2a677ec2bc3d2c32cc1a6e834c66
  main647 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main648
                   GHC.Stack.Types.EmptyCallStack) -}
e6285c91aefc0c9ec9ee54562b43dbd3
  main648 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main38
                   Main.main39
                   Main.main38
                   Main.main649) -}
529d66cfacfe8afa750f4a514ec1767a
  main649 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48#) -}
66ba60c0472ccea9a5838712edc9c586
  main65 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 324#) -}
b7871e17f57e290437d117d56b8d193a
  main650 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Say 'Hello World' if input == 2"#) -}
15254434586c481d910a3793bbaa3570
  main651 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main652) -}
1af89fb3b24c9532372098e1b7963cb5
  main652 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main653
                   GHC.Stack.Types.EmptyCallStack) -}
a65f331cf1fbbd5877506193c4edd267
  main653 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main64
                   Main.main540
                   Main.main64
                   Main.main209) -}
dd7c5d8c9d86252faa47bb4fbc732dff
  main654 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main655
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
47e7c64dc2f74c7075ae7d83ca36f9a4
  main655 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ Test.Hspec.Expectations.Expectation
                        Main.main663
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main662
                        Main.main656
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   ww1 }) -}
7aebb02e6b63d2af5e70480246fb593d
  main656 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Base.String
                   Main.main660
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShow[]_$s$fShow[]1
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   Main.main658
                   Main.main657) -}
b9f96a5a8f2a0d1e4090ced549414426
  main657 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hello"#) -}
c5b182c4630008e0bc884090fd9c3912
  main658 :: GHC.Base.String
  {- Unfolding: (UnoI.unoInteractive
                   @ GHC.Integer.Type.Integer
                   GHC.Real.$fIntegralInteger
                   Main.main659) -}
5dfb6d1b203fa03125bc067187b9c528
  main659 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
27bd2be5100717c03073ac5ccf1c9987
  main66 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main67
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
0e72f8163a544a52b98a68516c750110
  main660 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main661
                   GHC.Stack.Types.EmptyCallStack) -}
971c46649efab4856bd4052c469fa97a
  main661 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main320
                   Main.main39
                   Main.main320
                   Main.main128) -}
8a50011829666dda79516f18b2f3a469
  main662 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Say 'Hello' if input == 1"#) -}
59bbab9a989d83abf3315261d06545b8
  main663 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main664) -}
327381b0e8d9974d73fdc44893e38e48
  main664 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main665
                   GHC.Stack.Types.EmptyCallStack) -}
5fc64369d3238ee196a4275ba4940808
  main665 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main666
                   Main.main540
                   Main.main666
                   Main.main478) -}
40adc055d543008175e3138f65a4c132
  main666 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
9436e9c2ff530e7b92fb8eca618a5051
  main667 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main226
                   Main.main668) -}
e8f22a8b511f7b524a2cf860f1b93cfc
  main668 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "noInteractive"#) -}
4b87c1ace9af020d34fcc7df1aa1221d
  main669 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main226
                   Main.main670) -}
84a4f17ec10a811bc78f3e634daa275f
  main67 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main75
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main74
                        Main.main68
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
f8c1b9e3665301f470a3227335836879
  main670 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "no"#) -}
ed2952114dbd6154aed046464fad1b11
  main671 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
345e7d8845b43eefaec9a1545fc1423d
  main672 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3d2601c781dc53f8e8b5ba9775b4cdc6
  main68 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Bool
                   Main.main70
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowBool
                   GHC.Classes.$fEqBool
                   (let {
                      gs :: Common.Player
                      = Game.check (Game.deal ww3 ww1) Common.noPlayer
                    } in
                    case Common.$fEqPlayer_$c== gs gs of wild1 {
                      GHC.Types.False -> Game.cardInHand Main.redWild gs
                      GHC.Types.True
                      -> case gs of wild {
                           Common.HPlayer ds ds1
                           -> Game.cardInHand Main.redWild (Common.HPlayer ds Main.main69)
                           Common.AiPlayer ds ds1
                           -> Game.cardInHand Main.redWild (Common.AiPlayer ds Main.main69)
                           Common.NoPlayer ipv2
                           -> case Game.drawAndEnd3 ret_ty GHC.Types.Bool of {} } })
                   GHC.Types.True
                   ipv } }) -}
250654cd7486a816f659458125f5d2bf
  main69 :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blackWild
                   (GHC.Types.[] @ Common.Card)) -}
efba13deee47eff931f02b021c536175
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main544
                   Main.main8) -}
2c6acb18b9bd52bfe91eb53e5e5d67e8
  main70 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main71
                   GHC.Stack.Types.EmptyCallStack) -}
4a621c813b33d979a52e33933db11a5b
  main71 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main73
                   Main.main28
                   Main.main73
                   Main.main72) -}
378b2e57d8174811a91e3df36873ec45
  main72 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50#) -}
fefc9cfee34e8b32844491c1f5819d07
  main73 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 323#) -}
a76c5cae7cded4135d022e31d75f66a2
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should find wildcard"#) -}
9bed927519e1fe9f00e35d7a63f1a4c2
  main75 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main76) -}
f9edf805ee79e211ccbcd9784d7a51e3
  main76 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main77
                   GHC.Stack.Types.EmptyCallStack) -}
145c7af2c4c986c2af755e27ff605506
  main77 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main78
                   Main.main39
                   Main.main78
                   Main.main38) -}
1697e0d9999b5e017144ec228165102f
  main78 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 317#) -}
18e7808662ac9271a6794aef3f3efb77
  main79 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main80
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
fd533c02a9adc51c5b94f3324e4e1556
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main529
                   Main.main9) -}
c87893e39ffd6f345c7dd617da8db7fd
  main80 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main86
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main85
                        Main.main81
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
c250b10d03a528a090ce3589d86ee303
  main81 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 let {
                   gs' :: Common.Player = Game.check ipv2 Common.noPlayer
                 } in
                 let {
                   c1 :: Common.Card
                   = case gs' of wild1 {
                       Common.HPlayer ds1 ds8 -> GHC.List.$w!! @ Common.Card ds8 1#
                       Common.AiPlayer ds1 ds8 -> GHC.List.$w!! @ Common.Card ds8 1#
                       Common.NoPlayer ipv3
                       -> case Common.hand1 ret_ty Common.Card of {} }
                 } in
                 case Game.playCard2
                        c1
                        (Common.State ipv2 ww2 ipv1 (Game.discard ww4 ww3) gs')
                        ipv of ds1 { (#,#) ipv3 ipv4 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ Common.Card
                   Main.main82
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   Common.$fShowCard
                   Common.$fEqCard
                   c1
                   (case ipv4 of wild { Common.State ds2 ds3 ds4 ds5 ds6 ->
                    Main.main_go ds5 (GHC.List.lastError @ Common.Card) })
                   ipv3 } } }) -}
7ee306658d5ba9b928b79909ace1d862
  main82 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main83
                   GHC.Stack.Types.EmptyCallStack) -}
dba89107645fe5a7fc9ead3928ebe050
  main83 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main84
                   Main.main28
                   Main.main84
                   Main.main27) -}
78957b77d3154f8ae1b72b065fc8abe7
  main84 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 316#) -}
5976e2bd2d747fabcaf1edf015748b4d
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should put card in discard"#) -}
9450b6140768655f5bf7caa9c0d947cf
  main86 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main87) -}
7271b46fbe652743f26a4c7473f78b1a
  main87 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main41
                   Main.main88
                   GHC.Stack.Types.EmptyCallStack) -}
325d7332589054df2750831db7a188ab
  main88 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main90
                   Main.main39
                   Main.main90
                   Main.main89) -}
004750465563bbe3711e963955059a99
  main89 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36#) -}
0eeed3b1b8c55e85e162e01e90582c6a
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main10
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
60ad63bcc31faa9cd4c74ea9570b3aea
  main90 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 309#) -}
59d925efcc1764021ca2ced35b3565df
  main91 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main92
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
dcedb260cf3f41196947e03f17157eb6
  main92 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (case Test.Hspec.Core.Tree.$wspecItem
                        @ (GHC.Types.IO ())
                        Main.main99
                          `cast`
                        (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                        Test.Hspec.Core.Example.$fExampleIO1
                          `cast`
                        (Trans
                             (<Test.Hspec.Expectations.Expectation>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.Hspec.Expectations.Expectation>_N)))
                        Main.main98
                        Main.main93
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R)) of ww { Unit# ww1 ->
                 Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   ww1 }) -}
21f58309ccd56c0977636079ecf66e47
  main93 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 case (System.Random.Shuffle.shuffleM
                         @ GHC.Types.IO
                         @ Common.Card
                         Control.Monad.Random.$fMonadRandomIO
                         (Game.$wunsafeDrop2 @ Common.Card 29# ww3))
                        `cast`
                      (GHC.Types.N:IO[0] <[Common.Card]>_R)
                        s of ds7 { (#,#) ipv ipv1 ->
                 let {
                   ipv2 :: [Common.Player] = Game.deal ww3 ww1
                 } in
                 let {
                   gs' :: Common.Player = Game.check ipv2 Common.noPlayer
                 } in
                 let {
                   c1 :: Common.Card
                   = case gs' of wild1 {
                       Common.HPlayer ds1 ds8 -> GHC.List.$w!! @ Common.Card ds8 1#
                       Common.AiPlayer ds1 ds8 -> GHC.List.$w!! @ Common.Card ds8 1#
                       Common.NoPlayer ipv3
                       -> case Common.hand1 ret_ty Common.Card of {} }
                 } in
                 case Game.playCard2
                        c1
                        (Common.State ipv2 ww2 ipv1 (Game.discard ww4 ww3) gs')
                        ipv of ds1 { (#,#) ipv3 ipv4 ->
                 Test.Hspec.Expectations.shouldBe1
                   @ GHC.Types.Int
                   Main.main94
                     `cast`
                   (Sym (GHC.Classes.N:IP[0] <"loc">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   (case gs' of wild1 {
                      Common.HPlayer ds2 ds8
                      -> case Common.$wcountCards ds8 c1 of ww7 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.-# ww7 1#) }
                      Common.AiPlayer ds2 ds8
                      -> case Common.$wcountCards ds8 c1 of ww7 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.-# ww7 1#) }
                      Common.NoPlayer ipv5
                      -> case Common.hand1 ret_ty GHC.Types.Int of {} })
                   (case Common.$wcountCards
                           (Game.curHand ipv4)
                           c1 of ww7 { DEFAULT ->
                    GHC.Types.I# ww7 })
                   ipv3 } } }) -}
7258096eb65b5f0c852e8dbdd81d5532
  main94 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main33
                   Main.main95
                   GHC.Stack.Types.EmptyCallStack) -}
353d379b008b6f5bdf44ec747b5235b1
  main95 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main97
                   Main.main28
                   Main.main97
                   Main.main96) -}
a7776f3e67cabbde1fc83ebcf5eefec0
  main96 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 62#) -}
3ce034828c7574476c3547ebc3e326d9
  main97 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 308#) -}
78aa4dd80b704fbf80eb7b0f139afbb4
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "should take card from hand and act"#) -}
1c47838fba6899c104a8d56b3e68cbb5
  main99 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main100) -}
bfa8161a7ca01c8b15a88ef85604a316
  main_go :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
d0890fdad17e144262950c1ca3d62f7a
  main_go1 :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
48d74d43f71a25c5e856e00360b41476
  main_go2 :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
b77da21d548e3a998d5c5323d66567d3
  main_go3 :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
95bf9f90be851114f4187a75aa59b894
  main_go4 :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
916ab4e804d3f6084ad13b016ab0d266
  main_go5 :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
3d62b806d2d4db2de69638e01d86f36c
  main_go6 :: [Common.Player] -> Data.Monoid.All
  {- Arity: 1, Strictness: <S,1*U> -}
8a63e5489c89443c1b9c44372053ee03
  main_go7 :: [Common.Card] -> Common.Card -> Common.Card
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U)> -}
f23db8ddd13cd38c391acef7c88c55c7
  main_gs :: Common.State
  {- Unfolding: (case Game.$winitGame
                        Main.numberOfTestPlayers of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 Common.State ww1 ww2 ww3 ww4 ww5 }) -}
1c791324e7edb3dd83976939c38df184
  numberOfTestPlayers :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
f328fe7c13f7ba15d7823f6cf91e80de
  redOne :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Red
                   Common.One) -}
b4703d7a250aecfafad9b5500fdefd16
  redReverse :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Red
                   Common.ChDir) -}
7f5e9f7a007793a609efbc8433ebe6ca
  redThree :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Red
                   Common.Three) -}
f1d8f4326fc315628283878ff1453c68
  redWild :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Red
                   Common.ChCol) -}
080d7e215d8a0e1e089dbb3ac0e21a97
  testDStack :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main283) -}
4467c95ed82536e5419e5eee17ace763
  testDeck :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main552) -}
8d71f02293dec60ad61912816e26e68d
  testHand :: [Common.Card]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Common.Card
                   Main.blueThree
                   Main.main198) -}
eb8eb2ab43ffc49885b9c49f304cbd86
  whiteFour :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.White
                   Common.Four) -}
d3ff45126c38bca133802f4013dbb53e
  yellowTwo :: Common.Card
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Common.Card
                   System.Console.ANSI.Common.Yellow
                   Common.Two) -}
"SPEC/Main $fEq[] @ Card" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                     Common.Card)
  GHC.Classes.$fEq[] @ Common.Card $dEq = Main.$s$fEq[]
"SPEC/Main $fEq[]_$c/= @ Card" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                          Common.Card)
  GHC.Classes.$fEq[]_$c/= @ Common.Card $dEq
  = Main.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Main $fShow[] @ Card" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                         Common.Card)
  GHC.Show.$fShow[] @ Common.Card $dShow = Main.$s$fShow[]
"SPEC/Main $fShow[]_$cshow @ Card" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                Common.Card)
  GHC.Show.$fShow[]_$cshow @ Common.Card $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshowList @ Card" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                    Common.Card)
  GHC.Show.$fShow[]_$cshowList @ Common.Card $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowsPrec @ Card" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                     Common.Card)
  GHC.Show.$fShow[]_$cshowsPrec @ Common.Card $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

